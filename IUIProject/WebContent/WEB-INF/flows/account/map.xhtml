<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:h="http://java.sun.com/jsf/html" 
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:c="http://java.sun.com/jsp/jstl/core">
    

<h:head>

    <title>Places Autocomplete</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no"></meta>
    <meta charset="utf-8"></meta>
    <h:outputStylesheet library="css" name="style.css" />
    <link href="/maps/documentation/javascript/examples/default.css" rel="stylesheet"></link>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&amp;sensor=false&amp;libraries=places"></script>

    <style>
     
               
        #panel {
           
            top: 5px;
           
            margin-left: 100px;
            /* z-index: 5; */
            background-color: #fff;
            padding: 5px;
            border: 1px solid #999;
        }

        input {
            border: 1px solid  rgba(0, 0, 0, 0.5);
        }
        input.notfound {
            border: 2px solid  rgba(255, 0, 0, 0.4);
        }
    </style>

    <script>
    // <![CDATA[
        function initialize() {
          var mapOptions = {
            center: new google.maps.LatLng(-33.8688, 151.2195),
            zoom: 13,
            mapTypeId: google.maps.MapTypeId.ROADMAP
          };
          var map = new google.maps.Map(document.getElementById('map-canvas'),
            mapOptions);

          var input = /** @type {HTMLInputElement} */(document.getElementById('searchTextField'));
          var autocomplete = new google.maps.places.Autocomplete(input);

          autocomplete.bindTo('bounds', map);

          var infowindow = new google.maps.InfoWindow();
          var marker = new google.maps.Marker({
            map: map
          });

          google.maps.event.addListener(autocomplete, 'place_changed', function() {
            infowindow.close();
            marker.setVisible(false);
            input.className = '';
            var place = autocomplete.getPlace();
            if (!place.geometry) {
              // Inform the user that the place was not found and return.
              input.className = 'notfound';
              return;
            }

            // If the place has a geometry, then present it on a map.
            if (place.geometry.viewport) {
              map.fitBounds(place.geometry.viewport);
            } else {
              map.setCenter(place.geometry.location);
              map.setZoom(17);  // Why 17? Because it looks good.
            }
            marker.setIcon(/** @type {google.maps.Icon} */({
              url: place.icon,
              size: new google.maps.Size(71, 71),
              origin: new google.maps.Point(0, 0),
              anchor: new google.maps.Point(17, 34),
              scaledSize: new google.maps.Size(35, 35)
            }));
            marker.setPosition(place.geometry.location);
            marker.setVisible(true);

            var address = '';
            var adr1;
            var adr2;
            if (place.address_components) {
              address = [
                (place.address_components[0] && place.address_components[0].short_name || ''),
                (place.address_components[1] && place.address_components[1].short_name || ''),
                (place.address_components[2] && place.address_components[2].short_name || '')
              ].join(' ');
              adr1 = [
                      (place.address_components[0] && place.address_components[0].short_name || '')
                      
                    ].join(' ');

              var adr2 = [
                          (place.address_components[1] && place.address_components[1].short_name || '')
                      ].join(' ');
            }

            infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
            document.getElementById("miasto").innerHTML = address;
            infowindow.open(map, marker);
          });

          // Sets a listener on a radio button to change the filter type on Places
          // Autocomplete.
          function setupClickListener(id, types) {
            var radioButton = document.getElementById(id);
            google.maps.event.addDomListener(radioButton, 'click', function() {
              autocomplete.setTypes(types);
            });
          }

          setupClickListener('changetype-all', []);
          setupClickListener('changetype-establishment', ['establishment']);
          setupClickListener('changetype-geocode', ['geocode']);
        }

        google.maps.event.addDomListener(window, 'load', initialize);
    // ]]>
    </script>
</h:head>

<h:body>
<div id="container">
<div id="greeting">
				<c:if test="${not empty currentUser.name}">
					<b>Welcome,</b> ${user.firstName} ${user.lastName} | 
					<a  href="${request.contextPath}/app/logout">Logout</a>
					 
				</c:if>
				<c:otherwise>
					<ui:insert name="greeting" />
				</c:otherwise>
			</div>

<!-- 			<div id="goToMain"> -->
<!-- 				<a href="${request.contextPath}">Main Page</a> -->
<!-- 			</div> -->

			<div id="header">
			<h:outputText value="My World"/>
				<h1>
				
					<ui:insert name="header" />
				</h1>
			</div>
<div id="top" >
<div id="MENU">
				mwnu

				<h:form>
					<h:commandLink value="Main Page" action="goToMainPage" />
					<br />

					<h:commandLink value="My account" action="goToHome" />
					<br />

					<h:commandLink value="New Topic" action="createTopic" />
					<br />

					<h:commandLink value="Friends" />
					<br />
				</h:form>
			</div>
	<div id="TRESC">
	
	<div id="TRESCWIDEPANELMAP">
    <div id="panel">
      <input id="searchTextField" type="text" size="50"></input>
      <input type="radio" name="type" id="changetype-all" checked="checked"></input>
      <label for="changetype-all">All</label>

      <input type="radio" name="type" id="changetype-establishment"></input>
      <label for="changetype-establishment">Establishments</label>

      <input type="radio" name="type" id="changetype-geocode"></input>
      <label for="changetype-geocode">Geocodes</label>
    </div>
    </div>
    <div id="TRESCMAP">
    	<div id="map-canvas"></div>
    </div>
    <div id="TRESC11WIDE">
    	<h:outputLabel id="miasto" value="miasto"/>
    </div>
   </div> 
   </div>
</div>
</h:body>
</html>