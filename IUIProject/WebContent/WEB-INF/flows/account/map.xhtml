<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:h="http://java.sun.com/jsf/html" 
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:p="http://primefaces.org/ui">
    

<h:head>

    <title>Places Autocomplete</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no"></meta>
    <meta charset="utf-8"></meta>
    <h:outputStylesheet library="css" name="style.css" />
    <link href="/maps/documentation/javascript/examples/default.css" rel="stylesheet"></link>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&amp;sensor=false&amp;libraries=places"></script>

    <style>
     
               
        #panel {
           
            top: 5px;
           
            margin-left: 120px;
            /* z-index: 5; */
            background-color:white;
            padding: 5px;
            border: 1px solid #999;
        }

        input {
            border: 1px solid  rgba(0, 0, 0, 0.5);
        }
        input.notfound {
            border: 2px solid  rgba(255, 0, 0, 0.4);
        }
    </style>

    <script>
    // <![CDATA[
     var directionsDisplay = new google.maps.DirectionsRenderer();
     var directionsService = new google.maps.DirectionsService();
    
        function initialize() {

		//-----
		var placeSearch, autocomplete;
var componentForm = {
  street_number: 'short_name',
  route: 'long_name',
  locality: 'long_name',
  administrative_area_level_1: 'short_name',
  country: 'long_name',
  postal_code: 'short_name'
};
		//----
		
		//----
		// [START region_fillform]
function fillInAddress(place) {
  // Get the place details from the autocomplete object.
  //var place = autocomplete.getPlace();

  for (var component in componentForm) {
    document.getElementById(component).value = '';
    document.getElementById(component).disabled = false;
  }

  // Get each component of the address from the place details
  // and fill the corresponding field on the form.
  for (var i = 0; i < place.address_components.length; i++) {
    var addressType = place.address_components[i].types[0];
    if (componentForm[addressType]) {
      var val = place.address_components[i][componentForm[addressType]];
      document.getElementById(addressType).value = val;
    }
  }
}
// [END region_fillform]
		//----
            
          var mapOptions = {
            center: new google.maps.LatLng(-33.8688, 151.2195),
            zoom: 13,
            mapTypeId: google.maps.MapTypeId.ROADMAP
          };
          var map = new google.maps.Map(document.getElementById('map-canvas'),
            mapOptions);

         
          directionsDisplay.setMap(map);

          var input = /** @type {HTMLInputElement} */(document.getElementById('searchTextField'));
          var autocomplete = new google.maps.places.Autocomplete(input);

          autocomplete.bindTo('bounds', map);

          var infowindow = new google.maps.InfoWindow();
          var marker = new google.maps.Marker({
            map: map
          });

          google.maps.event.addListener(autocomplete, 'place_changed', function() {
            infowindow.close();
            marker.setVisible(false);
            input.className = '';
            var place = autocomplete.getPlace();
            if (!place.geometry) {
              // Inform the user that the place was not found and return.
              input.className = 'notfound';
              return;
            }

            // If the place has a geometry, then present it on a map.
            if (place.geometry.viewport) {
              map.fitBounds(place.geometry.viewport);
            } else {
              map.setCenter(place.geometry.location);
              map.setZoom(17);  // Why 17? Because it looks good.
            }
            marker.setIcon(/** @type {google.maps.Icon} */({
              url: place.icon,
              size: new google.maps.Size(71, 71),
              origin: new google.maps.Point(0, 0),
              anchor: new google.maps.Point(17, 34),
              scaledSize: new google.maps.Size(35, 35)
            }));
            marker.setPosition(place.geometry.location);
            marker.setVisible(true);

            document.getElementById('lat').value = marker.getPosition().lat();
			document.getElementById('lng').value =  marker.getPosition().lng();

            var address = '';
            var adr1;
            var adr2;
            if (place.address_components) {
              address = [
                (place.address_components[0] && place.address_components[0].short_name || ''),
                (place.address_components[1] && place.address_components[1].short_name || ''),
                (place.address_components[2] && place.address_components[2].short_name || '')
              ].join(' ');
             
            }

            infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);

            fillInAddress(place);
            
           var form = document.forms['topicform'];
           var setel = form.elements['miasto'];
            document.getElementById("miasto").innerHTML = document.getElementById("searchTextField").value;
           setel.innerHTML = document.getElementById("searchTextField").value;
           document.getElementById("adrestext").value = document.getElementById("searchTextField").value;
            infowindow.open(map, marker);
          });

          // Sets a listener on a radio button to change the filter type on Places
          // Autocomplete.
          function setupClickListener(id, types) {
            var radioButton = document.getElementById(id);
            google.maps.event.addDomListener(radioButton, 'click', function() {
              autocomplete.setTypes(types);
            });
          }

         

          setupClickListener('changetype-all', []);
          setupClickListener('changetype-establishment', ['establishment']);
          setupClickListener('changetype-geocode', ['geocode']);

         // document.getElementById("miasto").innerHTML ='Ustawiam';

       

        }

        function calcRoute() {
           
      	  var start = document.getElementById('locality').value;
      	  var end = document.getElementById('mycity').value;

      	var startlat = document.getElementById('lat').value;
    	  var startlng= document.getElementById('lng').value;

    	  var endlat = document.getElementById('ulat').value;
      	  var endlng = document.getElementById('ulng').value;
      	  
      	 alert("Route from "+start+" to Your adress in "+end);
      	  var request = {
      	      origin:new google.maps.LatLng(startlat, startlng),
      	      destination:new google.maps.LatLng(endlat, endlng),
      	      travelMode: google.maps.TravelMode.DRIVING
      	  };
      	  directionsService.route(request, function(response, status) {
      	    if (status == google.maps.DirectionsStatus.OK) {
      	      directionsDisplay.setDirections(response);
      	    }
      	  });
      	}
       

        google.maps.event.addDomListener(window, 'load', initialize);
       
    // ]]>
    </script>
</h:head>

<h:body>
<div id="container">
<div id="greeting">
				<c:if test="${not empty currentUser.name}">
					<b>Welcome,</b> ${user.firstName} ${user.lastName} | 
					<a  href="${request.contextPath}/app/logout">Logout</a>
					 
				</c:if>
				<c:otherwise>
					<ui:insert name="greeting" />
				</c:otherwise>
			</div>

<!-- 			<div id="goToMain"> -->
<!-- 				<a href="${request.contextPath}">Main Page</a> -->
<!-- 			</div> -->

			<div id="header">
			<h:outputText value="My World"/>
				<h1>
				
					<ui:insert name="header" />
				</h1>
			</div>
<div id="top" >
<div id="MENU">
				<p:panel header="MENU" footer=" - My World - ">
					<h:form>
						<p:menu>
							<p:menuitem value="Main Page" action="goToMainPage" icon="ui-icon ui-icon-home" />
							<p:menuitem value="Main Account" action="goToMyAccount" icon="ui-icon ui-icon-person"/>
							<p:menuitem value="Add Topic" action="createTopic" icon="ui-icon ui-icon-script" />
							
						</p:menu>
						<p:menu style="margin-top:10px;">
							<p:menuitem value="Search" action="goToSearch" icon="ui-icon ui-icon-search" />

						</p:menu>
					</h:form>
				</p:panel>
			</div>
	<div id="TRESC">
	
	<div id="TRESCWIDEPANELMAP">
    <div id="panel">
      <input id="searchTextField" type="text" size="50"></input>
      <input type="radio" name="type" id="changetype-all" checked="checked"></input>
      <label for="changetype-all">All</label>

      <input type="radio" name="type" id="changetype-establishment"></input>
      <label for="changetype-establishment">Establishments</label>

      <input type="radio" name="type" id="changetype-geocode"></input>
      <label for="changetype-geocode">Geocodes</label>
    </div>
    </div>
    <div id="TRESCMAP">
    	<div id="map-canvas"></div>
    </div>
    <div id="TRESCPELNASZEROKOSC">
    <p:panel header="What are you found?" style="margin-top:10px; margin-left:3px;">
   
   <h:form  prependId="false" id="topicform">	
    	<p:outputLabel value="Your Place: "/>
    	<p:outputLabel id="miasto" value="miasto"/>
    	
    	<p:fieldset id="address">
    	
    	<h:panelGrid columns="2">
    	
    	<h:outputLabel value="City"/>
    	<h:inputText id="locality" value="#{adressTopic.city}"/>
    	
    	
    	<h:outputLabel value="Zip code"/>
    	<h:inputText id="postal_code" value="#{adressTopic.postCode}"/>
    	
    	<h:outputLabel value="Street"/>
    	<h:inputText id="route" value="#{adressTopic.street}"/>
    	
    	<h:outputLabel value="Street number"/>
    	<h:inputText id="street_number" value="#{adressTopic.numberPos}"/>
    	
    	<h:outputLabel value="State"/>
    	<h:inputText id="administrative_area_level_1"/>
    	
    	<h:outputLabel value="Country"/>
    	<h:inputText id="country"/>
    	
     </h:panelGrid>
    </p:fieldset>
    	
    	<h:inputHidden id="adrestext" value="#{topicService.adresstext}" />
    	<h:inputHidden id="lat" value="#{topicService.lat}" />
		<h:inputHidden id="lat1" value="#{newTopic.lat}" />
		<h:inputHidden id="lng" value="#{topicService.lng}" />
		<h:inputHidden id="lng1" value="#{newTopic.lng}" />
		<h:inputHidden id="mycity" value="#{flowScope.user.userData.adress.city}"/>
		
		<h:inputHidden id="ulat" value="#{flowScope.user.userData.adress.lat}"/>
		<h:inputHidden id="ulng" value="#{flowScope.user.userData.adress.lng}"/>
     
   
    <p:fieldset legend="Topic">
							<p:focus />
							<p:messages id="messages" globalOnly="true" />


							<h:panelGrid id="dataPanelGrid" columns="2"
								style="margin: 0 auto; margin-top: 25px; text-align: left"
								cellspacing="3" cellpadding="3">


								<h:outputText for="topicCat" value="Categories:" />
								<p:selectOneMenu id="topicCat" value="#{newTopic.category}">

									<f:selectItems
										itemLabel="#{topicCategoryService.getAllTopicCategory()}"
										value="#{topicCategoryService.getAllTopicCategory()}" />
								</p:selectOneMenu>

								<h:outputText for="topicTitle" value="Title:" />
								<h:inputText id="topicTitle" value="#{newTopic.name}" />

								<h:outputText for="topicArea" value="Description:" />
								<h:inputTextarea id="topicArea" value="#{newTopic.describe}"
									cols="35" rows="4" />
							</h:panelGrid>
						</p:fieldset>
		<p:commandButton value="Save place" action="confirmNewUserTopic"/>
		<p:commandButton value="Show route (Beta)" onclick="calcRoute()"/>
    	<p:commandButton value="Back" action="createTopic"/>
    	
    	
    	
    	
    	
    	</h:form>
    </p:panel>
    </div>
   </div> 
   </div>
   <div id="footer">
   <div id="STOPKA">
	<div id="line"></div>
	Inteligentne usługi informacyjne - 2015</div>
   </div>
</div>
</h:body>
</html>