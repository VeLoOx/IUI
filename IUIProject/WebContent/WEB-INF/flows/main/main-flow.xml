<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.springframework.org/schema/webflow
        http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">

        <var name="user" class="pl.iui.domain.user.UserEntity"/>
        <var name="showTopic" class="pl.iui.domain.topic.TopicEntity" />
        <var name="markersUtils" class="pl.iui.ui.utils.MarkersUtils"/>
	
	<var name="newComm" class="pl.iui.domain.user.CommentsEntity" />
        
        <view-state id="main" view="main.xhtml">
                <transition on="login" to="login" />
                <transition on="register" to="register"/>
                <transition on="showTopicDetails" to="topicDeails">
                <evaluate expression="topicService.createMarker()" />
                </transition>
        </view-state>

        <view-state id="login" view="login.xhtml" model="user">
                <transition on="newUser" to="register" />
                <transition on="confirmSignIn" to="finish">
                        <evaluate expression="userAuthenticationProviderService.processUserAuthentication(user)" />
                </transition>
        </view-state>

        <view-state id="register" view="register.xhtml" model="user">
                <transition on="backToLogIn" to="login" />
                <transition on="confirmSignUp" to="authentication">
                        <evaluate expression="userService.createUser(user)" />
                </transition>
        </view-state>
        
        <view-state id="topicDeails" view="mainTopicDetails.xhtml">
        <on-render>
	 	<set name="showTopic" value="topicService.selectedTopic" ></set>
	</on-render> 
		<transition on="addComment" to="topicDeails">
		 	<evaluate  expression="topicService.addComment(showTopic,newComm,flowScope.user)" />
		 </transition>
        </view-state>
       
        <action-state id="authentication">
                <evaluate expression="userAuthenticationProviderService.processUserAuthentication(user)" />
                <transition on="yes" to="finish" />
                <transition on="no" to="welcome" />
        </action-state>
       
        <end-state id="finish" view="externalRedirect:account" />
       
</flow>
